/// <reference types="node" />
import * as gax from 'google-gax';
import { Callback, CallOptions, Descriptors, ClientOptions, PaginationCallback } from 'google-gax';
import { Transform } from 'stream';
import * as protos from '../../protos/protos';
/**
 *  Internet of Things (IoT) service. Securely connect and manage IoT devices.
 * @class
 * @memberof v1
 */
export declare class DeviceManagerClient {
    private _terminated;
    private _opts;
    private _providedCustomServicePath;
    private _gaxModule;
    private _gaxGrpc;
    private _protos;
    private _defaults;
    auth: gax.GoogleAuth;
    descriptors: Descriptors;
    warn: (code: string, message: string, warnType?: string) => void;
    innerApiCalls: {
        [name: string]: Function;
    };
    pathTemplates: {
        [name: string]: gax.PathTemplate;
    };
    deviceManagerStub?: Promise<{
        [name: string]: Function;
    }>;
    /**
     * Construct an instance of DeviceManagerClient.
     *
     * @param {object} [options] - The configuration object.
     * The options accepted by the constructor are described in detail
     * in [this document](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#creating-the-client-instance).
     * The common options are:
     * @param {object} [options.credentials] - Credentials object.
     * @param {string} [options.credentials.client_email]
     * @param {string} [options.credentials.private_key]
     * @param {string} [options.email] - Account email address. Required when
     *     using a .pem or .p12 keyFilename.
     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
     *     .p12 key downloaded from the Google Developers Console. If you provide
     *     a path to a JSON file, the projectId option below is not necessary.
     *     NOTE: .pem and .p12 require you to specify options.email as well.
     * @param {number} [options.port] - The port on which to connect to
     *     the remote host.
     * @param {string} [options.projectId] - The project ID from the Google
     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
     *     the environment variable GCLOUD_PROJECT for your project ID. If your
     *     app is running in an environment which supports
     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
     *     your project ID will be detected automatically.
     * @param {string} [options.apiEndpoint] - The domain name of the
     *     API remote host.
     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
     *     Follows the structure of {@link gapicConfig}.
     * @param {boolean} [options.fallback] - Use HTTP fallback mode.
     *     In fallback mode, a special browser-compatible transport implementation is used
     *     instead of gRPC transport. In browser context (if the `window` object is defined)
     *     the fallback mode is enabled automatically; set `options.fallback` to `false`
     *     if you need to override this behavior.
     */
    constructor(opts?: ClientOptions);
    /**
     * Initialize the client.
     * Performs asynchronous operations (such as authentication) and prepares the client.
     * This function will be called automatically when any class method is called for the
     * first time, but if you need to initialize it before calling an actual method,
     * feel free to call initialize() directly.
     *
     * You can await on this method if you want to make sure the client is initialized.
     *
     * @returns {Promise} A promise that resolves to an authenticated service stub.
     */
    initialize(): Promise<{
        [name: string]: Function;
    }>;
    /**
     * The DNS address for this API service.
     * @returns {string} The DNS address for this service.
     */
    static get servicePath(): string;
    /**
     * The DNS address for this API service - same as servicePath(),
     * exists for compatibility reasons.
     * @returns {string} The DNS address for this service.
     */
    static get apiEndpoint(): string;
    /**
     * The port for this API service.
     * @returns {number} The default port for this service.
     */
    static get port(): number;
    /**
     * The scopes needed to make gRPC calls for every method defined
     * in this service.
     * @returns {string[]} List of default scopes.
     */
    static get scopes(): string[];
    getProjectId(): Promise<string>;
    getProjectId(callback: Callback<string, undefined, undefined>): void;
    createDeviceRegistry(request?: protos.google.cloud.iot.v1.ICreateDeviceRegistryRequest, options?: CallOptions): Promise<[protos.google.cloud.iot.v1.IDeviceRegistry, protos.google.cloud.iot.v1.ICreateDeviceRegistryRequest | undefined, {} | undefined]>;
    createDeviceRegistry(request: protos.google.cloud.iot.v1.ICreateDeviceRegistryRequest, options: CallOptions, callback: Callback<protos.google.cloud.iot.v1.IDeviceRegistry, protos.google.cloud.iot.v1.ICreateDeviceRegistryRequest | null | undefined, {} | null | undefined>): void;
    createDeviceRegistry(request: protos.google.cloud.iot.v1.ICreateDeviceRegistryRequest, callback: Callback<protos.google.cloud.iot.v1.IDeviceRegistry, protos.google.cloud.iot.v1.ICreateDeviceRegistryRequest | null | undefined, {} | null | undefined>): void;
    getDeviceRegistry(request?: protos.google.cloud.iot.v1.IGetDeviceRegistryRequest, options?: CallOptions): Promise<[protos.google.cloud.iot.v1.IDeviceRegistry, protos.google.cloud.iot.v1.IGetDeviceRegistryRequest | undefined, {} | undefined]>;
    getDeviceRegistry(request: protos.google.cloud.iot.v1.IGetDeviceRegistryRequest, options: CallOptions, callback: Callback<protos.google.cloud.iot.v1.IDeviceRegistry, protos.google.cloud.iot.v1.IGetDeviceRegistryRequest | null | undefined, {} | null | undefined>): void;
    getDeviceRegistry(request: protos.google.cloud.iot.v1.IGetDeviceRegistryRequest, callback: Callback<protos.google.cloud.iot.v1.IDeviceRegistry, protos.google.cloud.iot.v1.IGetDeviceRegistryRequest | null | undefined, {} | null | undefined>): void;
    updateDeviceRegistry(request?: protos.google.cloud.iot.v1.IUpdateDeviceRegistryRequest, options?: CallOptions): Promise<[protos.google.cloud.iot.v1.IDeviceRegistry, protos.google.cloud.iot.v1.IUpdateDeviceRegistryRequest | undefined, {} | undefined]>;
    updateDeviceRegistry(request: protos.google.cloud.iot.v1.IUpdateDeviceRegistryRequest, options: CallOptions, callback: Callback<protos.google.cloud.iot.v1.IDeviceRegistry, protos.google.cloud.iot.v1.IUpdateDeviceRegistryRequest | null | undefined, {} | null | undefined>): void;
    updateDeviceRegistry(request: protos.google.cloud.iot.v1.IUpdateDeviceRegistryRequest, callback: Callback<protos.google.cloud.iot.v1.IDeviceRegistry, protos.google.cloud.iot.v1.IUpdateDeviceRegistryRequest | null | undefined, {} | null | undefined>): void;
    deleteDeviceRegistry(request?: protos.google.cloud.iot.v1.IDeleteDeviceRegistryRequest, options?: CallOptions): Promise<[protos.google.protobuf.IEmpty, protos.google.cloud.iot.v1.IDeleteDeviceRegistryRequest | undefined, {} | undefined]>;
    deleteDeviceRegistry(request: protos.google.cloud.iot.v1.IDeleteDeviceRegistryRequest, options: CallOptions, callback: Callback<protos.google.protobuf.IEmpty, protos.google.cloud.iot.v1.IDeleteDeviceRegistryRequest | null | undefined, {} | null | undefined>): void;
    deleteDeviceRegistry(request: protos.google.cloud.iot.v1.IDeleteDeviceRegistryRequest, callback: Callback<protos.google.protobuf.IEmpty, protos.google.cloud.iot.v1.IDeleteDeviceRegistryRequest | null | undefined, {} | null | undefined>): void;
    createDevice(request?: protos.google.cloud.iot.v1.ICreateDeviceRequest, options?: CallOptions): Promise<[protos.google.cloud.iot.v1.IDevice, protos.google.cloud.iot.v1.ICreateDeviceRequest | undefined, {} | undefined]>;
    createDevice(request: protos.google.cloud.iot.v1.ICreateDeviceRequest, options: CallOptions, callback: Callback<protos.google.cloud.iot.v1.IDevice, protos.google.cloud.iot.v1.ICreateDeviceRequest | null | undefined, {} | null | undefined>): void;
    createDevice(request: protos.google.cloud.iot.v1.ICreateDeviceRequest, callback: Callback<protos.google.cloud.iot.v1.IDevice, protos.google.cloud.iot.v1.ICreateDeviceRequest | null | undefined, {} | null | undefined>): void;
    getDevice(request?: protos.google.cloud.iot.v1.IGetDeviceRequest, options?: CallOptions): Promise<[protos.google.cloud.iot.v1.IDevice, protos.google.cloud.iot.v1.IGetDeviceRequest | undefined, {} | undefined]>;
    getDevice(request: protos.google.cloud.iot.v1.IGetDeviceRequest, options: CallOptions, callback: Callback<protos.google.cloud.iot.v1.IDevice, protos.google.cloud.iot.v1.IGetDeviceRequest | null | undefined, {} | null | undefined>): void;
    getDevice(request: protos.google.cloud.iot.v1.IGetDeviceRequest, callback: Callback<protos.google.cloud.iot.v1.IDevice, protos.google.cloud.iot.v1.IGetDeviceRequest | null | undefined, {} | null | undefined>): void;
    updateDevice(request?: protos.google.cloud.iot.v1.IUpdateDeviceRequest, options?: CallOptions): Promise<[protos.google.cloud.iot.v1.IDevice, protos.google.cloud.iot.v1.IUpdateDeviceRequest | undefined, {} | undefined]>;
    updateDevice(request: protos.google.cloud.iot.v1.IUpdateDeviceRequest, options: CallOptions, callback: Callback<protos.google.cloud.iot.v1.IDevice, protos.google.cloud.iot.v1.IUpdateDeviceRequest | null | undefined, {} | null | undefined>): void;
    updateDevice(request: protos.google.cloud.iot.v1.IUpdateDeviceRequest, callback: Callback<protos.google.cloud.iot.v1.IDevice, protos.google.cloud.iot.v1.IUpdateDeviceRequest | null | undefined, {} | null | undefined>): void;
    deleteDevice(request?: protos.google.cloud.iot.v1.IDeleteDeviceRequest, options?: CallOptions): Promise<[protos.google.protobuf.IEmpty, protos.google.cloud.iot.v1.IDeleteDeviceRequest | undefined, {} | undefined]>;
    deleteDevice(request: protos.google.cloud.iot.v1.IDeleteDeviceRequest, options: CallOptions, callback: Callback<protos.google.protobuf.IEmpty, protos.google.cloud.iot.v1.IDeleteDeviceRequest | null | undefined, {} | null | undefined>): void;
    deleteDevice(request: protos.google.cloud.iot.v1.IDeleteDeviceRequest, callback: Callback<protos.google.protobuf.IEmpty, protos.google.cloud.iot.v1.IDeleteDeviceRequest | null | undefined, {} | null | undefined>): void;
    modifyCloudToDeviceConfig(request?: protos.google.cloud.iot.v1.IModifyCloudToDeviceConfigRequest, options?: CallOptions): Promise<[protos.google.cloud.iot.v1.IDeviceConfig, protos.google.cloud.iot.v1.IModifyCloudToDeviceConfigRequest | undefined, {} | undefined]>;
    modifyCloudToDeviceConfig(request: protos.google.cloud.iot.v1.IModifyCloudToDeviceConfigRequest, options: CallOptions, callback: Callback<protos.google.cloud.iot.v1.IDeviceConfig, protos.google.cloud.iot.v1.IModifyCloudToDeviceConfigRequest | null | undefined, {} | null | undefined>): void;
    modifyCloudToDeviceConfig(request: protos.google.cloud.iot.v1.IModifyCloudToDeviceConfigRequest, callback: Callback<protos.google.cloud.iot.v1.IDeviceConfig, protos.google.cloud.iot.v1.IModifyCloudToDeviceConfigRequest | null | undefined, {} | null | undefined>): void;
    listDeviceConfigVersions(request?: protos.google.cloud.iot.v1.IListDeviceConfigVersionsRequest, options?: CallOptions): Promise<[protos.google.cloud.iot.v1.IListDeviceConfigVersionsResponse, protos.google.cloud.iot.v1.IListDeviceConfigVersionsRequest | undefined, {} | undefined]>;
    listDeviceConfigVersions(request: protos.google.cloud.iot.v1.IListDeviceConfigVersionsRequest, options: CallOptions, callback: Callback<protos.google.cloud.iot.v1.IListDeviceConfigVersionsResponse, protos.google.cloud.iot.v1.IListDeviceConfigVersionsRequest | null | undefined, {} | null | undefined>): void;
    listDeviceConfigVersions(request: protos.google.cloud.iot.v1.IListDeviceConfigVersionsRequest, callback: Callback<protos.google.cloud.iot.v1.IListDeviceConfigVersionsResponse, protos.google.cloud.iot.v1.IListDeviceConfigVersionsRequest | null | undefined, {} | null | undefined>): void;
    listDeviceStates(request?: protos.google.cloud.iot.v1.IListDeviceStatesRequest, options?: CallOptions): Promise<[protos.google.cloud.iot.v1.IListDeviceStatesResponse, protos.google.cloud.iot.v1.IListDeviceStatesRequest | undefined, {} | undefined]>;
    listDeviceStates(request: protos.google.cloud.iot.v1.IListDeviceStatesRequest, options: CallOptions, callback: Callback<protos.google.cloud.iot.v1.IListDeviceStatesResponse, protos.google.cloud.iot.v1.IListDeviceStatesRequest | null | undefined, {} | null | undefined>): void;
    listDeviceStates(request: protos.google.cloud.iot.v1.IListDeviceStatesRequest, callback: Callback<protos.google.cloud.iot.v1.IListDeviceStatesResponse, protos.google.cloud.iot.v1.IListDeviceStatesRequest | null | undefined, {} | null | undefined>): void;
    setIamPolicy(request?: protos.google.iam.v1.ISetIamPolicyRequest, options?: CallOptions): Promise<[protos.google.iam.v1.IPolicy, protos.google.iam.v1.ISetIamPolicyRequest | undefined, {} | undefined]>;
    setIamPolicy(request: protos.google.iam.v1.ISetIamPolicyRequest, options: CallOptions, callback: Callback<protos.google.iam.v1.IPolicy, protos.google.iam.v1.ISetIamPolicyRequest | null | undefined, {} | null | undefined>): void;
    setIamPolicy(request: protos.google.iam.v1.ISetIamPolicyRequest, callback: Callback<protos.google.iam.v1.IPolicy, protos.google.iam.v1.ISetIamPolicyRequest | null | undefined, {} | null | undefined>): void;
    getIamPolicy(request?: protos.google.iam.v1.IGetIamPolicyRequest, options?: CallOptions): Promise<[protos.google.iam.v1.IPolicy, protos.google.iam.v1.IGetIamPolicyRequest | undefined, {} | undefined]>;
    getIamPolicy(request: protos.google.iam.v1.IGetIamPolicyRequest, options: CallOptions, callback: Callback<protos.google.iam.v1.IPolicy, protos.google.iam.v1.IGetIamPolicyRequest | null | undefined, {} | null | undefined>): void;
    getIamPolicy(request: protos.google.iam.v1.IGetIamPolicyRequest, callback: Callback<protos.google.iam.v1.IPolicy, protos.google.iam.v1.IGetIamPolicyRequest | null | undefined, {} | null | undefined>): void;
    testIamPermissions(request?: protos.google.iam.v1.ITestIamPermissionsRequest, options?: CallOptions): Promise<[protos.google.iam.v1.ITestIamPermissionsResponse, protos.google.iam.v1.ITestIamPermissionsRequest | undefined, {} | undefined]>;
    testIamPermissions(request: protos.google.iam.v1.ITestIamPermissionsRequest, options: CallOptions, callback: Callback<protos.google.iam.v1.ITestIamPermissionsResponse, protos.google.iam.v1.ITestIamPermissionsRequest | null | undefined, {} | null | undefined>): void;
    testIamPermissions(request: protos.google.iam.v1.ITestIamPermissionsRequest, callback: Callback<protos.google.iam.v1.ITestIamPermissionsResponse, protos.google.iam.v1.ITestIamPermissionsRequest | null | undefined, {} | null | undefined>): void;
    sendCommandToDevice(request?: protos.google.cloud.iot.v1.ISendCommandToDeviceRequest, options?: CallOptions): Promise<[protos.google.cloud.iot.v1.ISendCommandToDeviceResponse, protos.google.cloud.iot.v1.ISendCommandToDeviceRequest | undefined, {} | undefined]>;
    sendCommandToDevice(request: protos.google.cloud.iot.v1.ISendCommandToDeviceRequest, options: CallOptions, callback: Callback<protos.google.cloud.iot.v1.ISendCommandToDeviceResponse, protos.google.cloud.iot.v1.ISendCommandToDeviceRequest | null | undefined, {} | null | undefined>): void;
    sendCommandToDevice(request: protos.google.cloud.iot.v1.ISendCommandToDeviceRequest, callback: Callback<protos.google.cloud.iot.v1.ISendCommandToDeviceResponse, protos.google.cloud.iot.v1.ISendCommandToDeviceRequest | null | undefined, {} | null | undefined>): void;
    bindDeviceToGateway(request?: protos.google.cloud.iot.v1.IBindDeviceToGatewayRequest, options?: CallOptions): Promise<[protos.google.cloud.iot.v1.IBindDeviceToGatewayResponse, protos.google.cloud.iot.v1.IBindDeviceToGatewayRequest | undefined, {} | undefined]>;
    bindDeviceToGateway(request: protos.google.cloud.iot.v1.IBindDeviceToGatewayRequest, options: CallOptions, callback: Callback<protos.google.cloud.iot.v1.IBindDeviceToGatewayResponse, protos.google.cloud.iot.v1.IBindDeviceToGatewayRequest | null | undefined, {} | null | undefined>): void;
    bindDeviceToGateway(request: protos.google.cloud.iot.v1.IBindDeviceToGatewayRequest, callback: Callback<protos.google.cloud.iot.v1.IBindDeviceToGatewayResponse, protos.google.cloud.iot.v1.IBindDeviceToGatewayRequest | null | undefined, {} | null | undefined>): void;
    unbindDeviceFromGateway(request?: protos.google.cloud.iot.v1.IUnbindDeviceFromGatewayRequest, options?: CallOptions): Promise<[protos.google.cloud.iot.v1.IUnbindDeviceFromGatewayResponse, protos.google.cloud.iot.v1.IUnbindDeviceFromGatewayRequest | undefined, {} | undefined]>;
    unbindDeviceFromGateway(request: protos.google.cloud.iot.v1.IUnbindDeviceFromGatewayRequest, options: CallOptions, callback: Callback<protos.google.cloud.iot.v1.IUnbindDeviceFromGatewayResponse, protos.google.cloud.iot.v1.IUnbindDeviceFromGatewayRequest | null | undefined, {} | null | undefined>): void;
    unbindDeviceFromGateway(request: protos.google.cloud.iot.v1.IUnbindDeviceFromGatewayRequest, callback: Callback<protos.google.cloud.iot.v1.IUnbindDeviceFromGatewayResponse, protos.google.cloud.iot.v1.IUnbindDeviceFromGatewayRequest | null | undefined, {} | null | undefined>): void;
    listDeviceRegistries(request?: protos.google.cloud.iot.v1.IListDeviceRegistriesRequest, options?: CallOptions): Promise<[protos.google.cloud.iot.v1.IDeviceRegistry[], protos.google.cloud.iot.v1.IListDeviceRegistriesRequest | null, protos.google.cloud.iot.v1.IListDeviceRegistriesResponse]>;
    listDeviceRegistries(request: protos.google.cloud.iot.v1.IListDeviceRegistriesRequest, options: CallOptions, callback: PaginationCallback<protos.google.cloud.iot.v1.IListDeviceRegistriesRequest, protos.google.cloud.iot.v1.IListDeviceRegistriesResponse | null | undefined, protos.google.cloud.iot.v1.IDeviceRegistry>): void;
    listDeviceRegistries(request: protos.google.cloud.iot.v1.IListDeviceRegistriesRequest, callback: PaginationCallback<protos.google.cloud.iot.v1.IListDeviceRegistriesRequest, protos.google.cloud.iot.v1.IListDeviceRegistriesResponse | null | undefined, protos.google.cloud.iot.v1.IDeviceRegistry>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The project and cloud region path. For example,
     *   `projects/example-project/locations/us-central1`.
     * @param {number} request.pageSize
     *   The maximum number of registries to return in the response. If this value
     *   is zero, the service will select a default size. A call may return fewer
     *   objects than requested. A non-empty `next_page_token` in the response
     *   indicates that more data is available.
     * @param {string} request.pageToken
     *   The value returned by the last `ListDeviceRegistriesResponse`; indicates
     *   that this is a continuation of a prior `ListDeviceRegistries` call and
     *   the system should return the next page of data.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing [DeviceRegistry]{@link google.cloud.iot.v1.DeviceRegistry} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listDeviceRegistriesAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the
     *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
     *   for more details and examples.
     */
    listDeviceRegistriesStream(request?: protos.google.cloud.iot.v1.IListDeviceRegistriesRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listDeviceRegistries`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The project and cloud region path. For example,
     *   `projects/example-project/locations/us-central1`.
     * @param {number} request.pageSize
     *   The maximum number of registries to return in the response. If this value
     *   is zero, the service will select a default size. A call may return fewer
     *   objects than requested. A non-empty `next_page_token` in the response
     *   indicates that more data is available.
     * @param {string} request.pageToken
     *   The value returned by the last `ListDeviceRegistriesResponse`; indicates
     *   that this is a continuation of a prior `ListDeviceRegistries` call and
     *   the system should return the next page of data.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
     *   When you iterate the returned iterable, each element will be an object representing
     *   [DeviceRegistry]{@link google.cloud.iot.v1.DeviceRegistry}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the
     *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
     *   for more details and examples.
     * @example
     * const iterable = client.listDeviceRegistriesAsync(request);
     * for await (const response of iterable) {
     *   // process response
     * }
     */
    listDeviceRegistriesAsync(request?: protos.google.cloud.iot.v1.IListDeviceRegistriesRequest, options?: CallOptions): AsyncIterable<protos.google.cloud.iot.v1.IDeviceRegistry>;
    listDevices(request?: protos.google.cloud.iot.v1.IListDevicesRequest, options?: CallOptions): Promise<[protos.google.cloud.iot.v1.IDevice[], protos.google.cloud.iot.v1.IListDevicesRequest | null, protos.google.cloud.iot.v1.IListDevicesResponse]>;
    listDevices(request: protos.google.cloud.iot.v1.IListDevicesRequest, options: CallOptions, callback: PaginationCallback<protos.google.cloud.iot.v1.IListDevicesRequest, protos.google.cloud.iot.v1.IListDevicesResponse | null | undefined, protos.google.cloud.iot.v1.IDevice>): void;
    listDevices(request: protos.google.cloud.iot.v1.IListDevicesRequest, callback: PaginationCallback<protos.google.cloud.iot.v1.IListDevicesRequest, protos.google.cloud.iot.v1.IListDevicesResponse | null | undefined, protos.google.cloud.iot.v1.IDevice>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The device registry path. Required. For example,
     *   `projects/my-project/locations/us-central1/registries/my-registry`.
     * @param {number[]} request.deviceNumIds
     *   A list of device numeric IDs. If empty, this field is ignored. Maximum
     *   IDs: 10,000.
     * @param {string[]} request.deviceIds
     *   A list of device string IDs. For example, `['device0', 'device12']`.
     *   If empty, this field is ignored. Maximum IDs: 10,000
     * @param {google.protobuf.FieldMask} request.fieldMask
     *   The fields of the `Device` resource to be returned in the response. The
     *   fields `id` and `num_id` are always returned, along with any
     *   other fields specified in snake_case format, for example:
     *   `last_heartbeat_time`.
     * @param {google.cloud.iot.v1.GatewayListOptions} request.gatewayListOptions
     *   Options related to gateways.
     * @param {number} request.pageSize
     *   The maximum number of devices to return in the response. If this value
     *   is zero, the service will select a default size. A call may return fewer
     *   objects than requested. A non-empty `next_page_token` in the response
     *   indicates that more data is available.
     * @param {string} request.pageToken
     *   The value returned by the last `ListDevicesResponse`; indicates
     *   that this is a continuation of a prior `ListDevices` call and
     *   the system should return the next page of data.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing [Device]{@link google.cloud.iot.v1.Device} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listDevicesAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the
     *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
     *   for more details and examples.
     */
    listDevicesStream(request?: protos.google.cloud.iot.v1.IListDevicesRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listDevices`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The device registry path. Required. For example,
     *   `projects/my-project/locations/us-central1/registries/my-registry`.
     * @param {number[]} request.deviceNumIds
     *   A list of device numeric IDs. If empty, this field is ignored. Maximum
     *   IDs: 10,000.
     * @param {string[]} request.deviceIds
     *   A list of device string IDs. For example, `['device0', 'device12']`.
     *   If empty, this field is ignored. Maximum IDs: 10,000
     * @param {google.protobuf.FieldMask} request.fieldMask
     *   The fields of the `Device` resource to be returned in the response. The
     *   fields `id` and `num_id` are always returned, along with any
     *   other fields specified in snake_case format, for example:
     *   `last_heartbeat_time`.
     * @param {google.cloud.iot.v1.GatewayListOptions} request.gatewayListOptions
     *   Options related to gateways.
     * @param {number} request.pageSize
     *   The maximum number of devices to return in the response. If this value
     *   is zero, the service will select a default size. A call may return fewer
     *   objects than requested. A non-empty `next_page_token` in the response
     *   indicates that more data is available.
     * @param {string} request.pageToken
     *   The value returned by the last `ListDevicesResponse`; indicates
     *   that this is a continuation of a prior `ListDevices` call and
     *   the system should return the next page of data.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
     *   When you iterate the returned iterable, each element will be an object representing
     *   [Device]{@link google.cloud.iot.v1.Device}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the
     *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
     *   for more details and examples.
     * @example
     * const iterable = client.listDevicesAsync(request);
     * for await (const response of iterable) {
     *   // process response
     * }
     */
    listDevicesAsync(request?: protos.google.cloud.iot.v1.IListDevicesRequest, options?: CallOptions): AsyncIterable<protos.google.cloud.iot.v1.IDevice>;
    /**
     * Return a fully-qualified device resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} registry
     * @param {string} device
     * @returns {string} Resource name string.
     */
    devicePath(project: string, location: string, registry: string, device: string): string;
    /**
     * Parse the project from Device resource.
     *
     * @param {string} deviceName
     *   A fully-qualified path representing Device resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromDeviceName(deviceName: string): string | number;
    /**
     * Parse the location from Device resource.
     *
     * @param {string} deviceName
     *   A fully-qualified path representing Device resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromDeviceName(deviceName: string): string | number;
    /**
     * Parse the registry from Device resource.
     *
     * @param {string} deviceName
     *   A fully-qualified path representing Device resource.
     * @returns {string} A string representing the registry.
     */
    matchRegistryFromDeviceName(deviceName: string): string | number;
    /**
     * Parse the device from Device resource.
     *
     * @param {string} deviceName
     *   A fully-qualified path representing Device resource.
     * @returns {string} A string representing the device.
     */
    matchDeviceFromDeviceName(deviceName: string): string | number;
    /**
     * Return a fully-qualified location resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @returns {string} Resource name string.
     */
    locationPath(project: string, location: string): string;
    /**
     * Parse the project from Location resource.
     *
     * @param {string} locationName
     *   A fully-qualified path representing Location resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromLocationName(locationName: string): string | number;
    /**
     * Parse the location from Location resource.
     *
     * @param {string} locationName
     *   A fully-qualified path representing Location resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromLocationName(locationName: string): string | number;
    /**
     * Return a fully-qualified registry resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} registry
     * @returns {string} Resource name string.
     */
    registryPath(project: string, location: string, registry: string): string;
    /**
     * Parse the project from Registry resource.
     *
     * @param {string} registryName
     *   A fully-qualified path representing Registry resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromRegistryName(registryName: string): string | number;
    /**
     * Parse the location from Registry resource.
     *
     * @param {string} registryName
     *   A fully-qualified path representing Registry resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromRegistryName(registryName: string): string | number;
    /**
     * Parse the registry from Registry resource.
     *
     * @param {string} registryName
     *   A fully-qualified path representing Registry resource.
     * @returns {string} A string representing the registry.
     */
    matchRegistryFromRegistryName(registryName: string): string | number;
    /**
     * Terminate the gRPC channel and close the client.
     *
     * The client will no longer be usable and all future behavior is undefined.
     * @returns {Promise} A promise that resolves when the client is closed.
     */
    close(): Promise<void>;
}
